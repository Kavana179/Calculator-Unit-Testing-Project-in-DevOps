name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from GitHub
      - uses: actions/checkout@v4

      # Step 2: Set Python path (ensure that the root directory is included in the Python path)
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Add root directory to the path

      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # Use the correct Python version here

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install coverage  # Install coverage to generate coverage reports

      # Step 5: Install SonarScanner
      - name: Install SonarScanner using apt-get
        run: |
          sudo apt-get update
          sudo apt-get install -y sonar-scanner

      # Step 6: Run tests and generate coverage report
      - name: Run tests and generate coverage report
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q  # Run tests in the 'tests' directory
          coverage run -m pytest
          coverage xml  # Generates the coverage.xml file

      # Step 7: Run SonarCloud analysis
      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Reference the token from GitHub secrets
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Kavana179_Calculator-Unit-Testing-Project-in-DevOps \
            -Dsonar.organization=kavana179 \
            -Dsonar.sources=.  # Root directory as the source
            -Dsonar.language=python  # Specify the language as Python
            -Dsonar.python.version=3.9  # Specify the exact Python version
            -Dsonar.python.coverage.reportPaths=coverage.xml  # Point to the generated coverage report
