name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Python (optional, adjust based on your project requirements)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Step 3: Install dependencies (for testing purposes)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov

    # Step 4: Run tests and generate coverage report
    - name: Run tests and generate coverage report
      run: |
        pytest --cov=calculator --cov-report=xml:coverage.xml  # Replace 'your_project' with your module name

    # Step 5: Set up Java 11 (Temurin)
    - name: Set up Java 11 (Temurin)
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'  # Corrected distribution name
        java-version: '11'
        java-package: jdk
        architecture: x64
        check-latest: false

    # Step 6: Ensure Java 11 is the default version
    - name: Set Java 11 as default and verify
      run: |
        sudo update-alternatives --config java  # Ensures that Java 11 is selected
        sudo update-alternatives --config javac  # Ensures that javac (compiler) is also Java 11
        java -version  # Verifies that Java 11 is being used

    # Step 7: Install SonarScanner
    - name: Install SonarScanner
      run: |
        echo "Installing SonarScanner..."
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip -O sonar-scanner.zip
        unzip sonar-scanner.zip -d /opt
        echo "/opt/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH
        echo "SonarScanner installation completed"

    # Step 8: Prepare sonar-project.properties for SonarCloud analysis
    - name: Prepare sonar-project.properties
      run: |
        echo "sonar.projectKey=Kavana179_Calculator-Unit-Testing-Project-in-DevOps" > sonar-project.properties
        echo "sonar.organization=kavana179" >> sonar-project.properties
        echo "sonar.sources=." >> sonar-project.properties
        echo "sonar.python.version=3.9" >> sonar-project.properties
        echo "sonar.python.coverage.reportPaths=coverage.xml" >> sonar-project.properties
        echo "sonar.host.url=https://sonarcloud.io" >> sonar-project.properties
        echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-project.properties

    # Step 9: Run SonarScanner with -X flag for full debug logs
    - name: Run SonarScanner
      run: |
        sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }} -X
